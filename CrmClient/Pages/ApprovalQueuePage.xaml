<phone:PhoneApplicationPage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
   xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
    x:Class="CrmClient.Pages.ApprovalQueuePage"
    SupportedOrientations="Portrait" Orientation="Portrait"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="True">
 
    <phone:PhoneApplicationPage.Resources>
        <shell:ApplicationBar x:Key="DefaultBar"  IsVisible="True" BackgroundColor="DeepSkyBlue" ForegroundColor="LightBlue">
            <shell:ApplicationBar.MenuItems>
                <shell:ApplicationBarMenuItem Click="MenuItemClick" Text="settings" />
            </shell:ApplicationBar.MenuItems>
        	<shell:ApplicationBarIconButton  Click="Select_OnClick" IconUri="/Toolkit.Content/ApplicationBar.Select.png" IsEnabled="True" Text="select"/>
        	<shell:ApplicationBarIconButton Click="Refresh_OnClick"  IconUri="/Assets/AppBar/refresh.png" IsEnabled="True" Text="refresh"/>
        </shell:ApplicationBar>
        <shell:ApplicationBar x:Key="SelectItemBar" IsVisible="True">
        	<shell:ApplicationBarIconButton Click="AplyClick" IconUri="/Toolkit.Content/ApplicationBar.Check.png" IsEnabled="True" Text="Aply"/>
        	<shell:ApplicationBarIconButton Click="СancelClick" IconUri="/Toolkit.Content/ApplicationBar.Cancel.png" IsEnabled="True" Text="Aply"/>
</shell:ApplicationBar>
    	<Style x:Key="LongListMultiSelectorItemListStyle" TargetType="toolkit:LongListMultiSelectorItem">
    		<Setter Property="Background" Value="{StaticResource PhoneAccentBrush}"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="toolkit:LongListMultiSelectorItem">
    					<Grid MinHeight="52">
    						<Grid.Resources>
    							<ExponentialEase EasingMode="EaseIn" Exponent="8" x:Key="ExponentialEaseIn"/>
    							<QuadraticEase EasingMode="EaseOut" x:Key="QuadraticEaseOut"/>
    						</Grid.Resources>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="SelectionEnabledStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition x:Name="ClosedToExposed" 
    										From="Closed" To="Exposed"
    										GeneratedDuration="0:0:0.30">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
    												Storyboard.TargetName="OuterHintPanel">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualTransition>
    									<VisualTransition x:Name="ExposedToClosed" 
    										From="Exposed" To="Closed"
    										GeneratedDuration="0:0:0.30">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
    												Storyboard.TargetName="OuterHintPanel">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
    											</DoubleAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualTransition>
    									<VisualTransition x:Name="ExposedToOpened"
    										From="Exposed" To="Opened"
    										GeneratedDuration="0:0:0.30">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="SelectBox">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="Presenter">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
    												Storyboard.TargetName="OuterHintPanel">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
    											</DoubleAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    												Storyboard.TargetName="SelectBox">
    												<DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    												Storyboard.TargetName="OuterHintPanel">
    												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    												Storyboard.TargetName="InnerHintPanel">
    												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualTransition>
    									<VisualTransition x:Name="ClosedToOpened"
    										From="Closed" To="Opened"
    										GeneratedDuration="0:0:0.15">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="SelectBox">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="Presenter">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    											</DoubleAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    												Storyboard.TargetName="SelectBox">
    												<DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    												Storyboard.TargetName="OuterHintPanel">
    												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
    											</ObjectAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    												Storyboard.TargetName="InnerHintPanel">
    												<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualTransition>
    									<VisualTransition x:Name="OpenedToClosed"
    										From="Opened" To="Closed"
    										GeneratedDuration="0:0:0.15">
    										<Storyboard>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="SelectBox">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    											</DoubleAnimationUsingKeyFrames>
    											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    												Storyboard.TargetName="Presenter">
    												<EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    												<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
    											</DoubleAnimationUsingKeyFrames>
    											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    												Storyboard.TargetName="SelectBox">
    												<DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
    											</ObjectAnimationUsingKeyFrames>
    										</Storyboard>
    									</VisualTransition>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Closed"/>
    								<VisualState x:Name="Exposed">
    									<Storyboard>
    										<DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
    											Storyboard.TargetName="OuterHintPanel"
    											Duration="0" To="1.0"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Opened">
    									<Storyboard>
    										<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    											Storyboard.TargetName="SelectBox"
    											Duration="0" To="0"/>
    										<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
    											Storyboard.TargetName="Presenter"
    											Duration="0" To="86"/>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    											Storyboard.TargetName="SelectBox">
    											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
    											Storyboard.TargetName="OuterCover">
    											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
    										</ObjectAnimationUsingKeyFrames>
    										<DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
    											Storyboard.TargetName="OuterHintPanel"
    											Duration="0" To="0.0"/>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    											Storyboard.TargetName="OuterHintPanel">
    											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
    											Storyboard.TargetName="InnerHintPanel">
    											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Grid HorizontalAlignment="Stretch">
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition Width="*"/>
    								<ColumnDefinition Width="Auto"/>
    							</Grid.ColumnDefinitions>
    							<Grid Grid.Column="0" HorizontalAlignment="Stretch" toolkitPrimitives:ClipToBounds.IsEnabled="True">
    								<ContentPresenter x:Name="Presenter">
    									<ContentPresenter.RenderTransform>
    										<CompositeTransform TranslateX="24"/>
    									</ContentPresenter.RenderTransform>
    								</ContentPresenter>
    							</Grid>
    							<Rectangle x:Name="InnerHintPanel" Grid.Column="0" Width="24"
    								Height="{TemplateBinding HintPanelHeight}"
    								HorizontalAlignment="Left"
    								Fill="Transparent"
    								StrokeThickness="0">
    								<Rectangle.RenderTransform>
    									<CompositeTransform TranslateX="24"/>
    								</Rectangle.RenderTransform>
    							</Rectangle>
    							<ContentControl x:Name="InfoPresenter" Grid.Column="1" 
    								VerticalAlignment="Top"
    								Content="{TemplateBinding ContentInfo}"
    								ContentTemplate="{TemplateBinding ContentInfoTemplate}"/>
    						</Grid>
    						<Rectangle x:Name="OuterHintPanel" Width="24"
    							HorizontalAlignment="Left"
    							Height="{TemplateBinding HintPanelHeight}"
    							Fill="{TemplateBinding Background}"
    							StrokeThickness="0" Opacity="0.0"/>
    						<Grid x:Name="OuterCover" IsHitTestVisible="True"
    							Visibility="Collapsed" Background="Transparent"/>
    						<Canvas HorizontalAlignment="Left">
    							<CheckBox x:Name="SelectBox" VerticalAlignment="Center" Margin="12,15,5,0" Visibility="Collapsed"
    								IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
    								<CheckBox.RenderTransform>
    									<CompositeTransform TranslateX="-58"/>
    								</CheckBox.RenderTransform>
    							</CheckBox>
    						</Canvas>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

    	<ControlTemplate x:Key="LongListMultiSelectorWithVerticalAlign" TargetType="toolkit:LongListMultiSelector">
    		<phone:LongListSelector x:Name="InnerSelector"
    			GridCellSize="{TemplateBinding GridCellSize}"
    			GroupFooterTemplate="{TemplateBinding GroupFooterTemplate}"
    			GroupHeaderTemplate="{TemplateBinding GroupHeaderTemplate}"
    			HideEmptyGroups="{TemplateBinding HideEmptyGroups}"
    			IsGroupingEnabled="{TemplateBinding IsGroupingEnabled}"
    			ItemsSource="{TemplateBinding ItemsSource}"
    			JumpListStyle="{TemplateBinding JumpListStyle}"
    			ListFooter="{TemplateBinding ListFooter}"
    			ListFooterTemplate="{TemplateBinding ListFooterTemplate}"
    			ListHeader="{TemplateBinding ListHeader}"
    			ListHeaderTemplate="{TemplateBinding ListHeaderTemplate}"
                    >
    			<phone:LongListSelector.ItemTemplate>
    				<DataTemplate>
    					<toolkit:LongListMultiSelectorItem Style="{StaticResource LongListMultiSelectorItemListStyle}"
    						x:Name="LLSItem"
    						HorizontalContentAlignment="Stretch"
    						VerticalAlignment="Stretch"
    						Content="{Binding}"
                                    />
    				</DataTemplate>
    			</phone:LongListSelector.ItemTemplate>
    		</phone:LongListSelector>
    	</ControlTemplate>
    </phone:PhoneApplicationPage.Resources>
	<phone:PhoneApplicationPage.FontFamily>
		<StaticResource ResourceKey="PhoneFontFamilyNormal"/>
	</phone:PhoneApplicationPage.FontFamily>
	<phone:PhoneApplicationPage.FontSize>
		<StaticResource ResourceKey="PhoneFontSizeNormal"/>
	</phone:PhoneApplicationPage.FontSize>
	<phone:PhoneApplicationPage.Foreground>
		<StaticResource ResourceKey="PhoneForegroundBrush"/>
	</phone:PhoneApplicationPage.Foreground>
<!--LayoutRoot is the root grid where all page content is placed-->
	<Grid x:Name="LayoutRoot" Background="Transparent">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<!--TitlePanel contains the name of the application and page title-->
		<StackPanel Grid.Row="0" Margin="12,17,0,28">
            <TextBlock Foreground="Coral" Text="{Binding LocalizedResources.ApplicationTitle, Source={StaticResource LocalizedStrings}}" Style="{StaticResource PhoneTextNormalStyle}" Margin="12,0,12,0" FontSize="27"/>

            <TextBlock Foreground="Coral" Text="{Binding LocalizedResources.ApprovalTitle, Source={StaticResource LocalizedStrings}}" Margin="12,0,0,0" Style="{StaticResource PhoneTextTitle1Style}" FontSize="53"/>
			<TextBlock Margin="13,0,0,0" x:Name="CountItems"  FontSize="25"/>
		</StackPanel>
        
            

        <!--ContentPanel - place additional content here-->
		<Grid x:Name="ContentPanel" Grid.Row="1" Margin="0,0,12,0">


			<toolkit:LongListMultiSelector  x:Name="RequestLongListMultiSelector"
				ItemsSource="{Binding Requests}" 
				LostMouseCapture="RequestLongListMultiSelector_OnMouseEnter"  MouseLeave="RequestLongListMultiSelector_OnMouseLeave" UseOptimizedManipulationRouting="True" ItemContainerStyle="{StaticResource LongListMultiSelectorItemListStyle}" Template="{StaticResource LongListMultiSelectorWithVerticalAlign}">

				<toolkit:LongListMultiSelector.ItemTemplate >
					<DataTemplate>
						<StackPanel Margin="-20,0,0,0">
							<TextBlock   Margin="20,-16,0,0" Text="{Binding Id}" 
								Style="{StaticResource PhoneTextExtraLargeStyle}"/>
							<StackPanel Orientation="Horizontal">
								<TextBlock Margin="12,0,0,0"  Visibility="{Binding Vis}"
									Text="{Binding LocalizedResources.Requerested, Source={StaticResource LocalizedStrings}}" 
									Foreground="{StaticResource PhoneContrastBackgroundBrush}" 
									FontSize="{StaticResource PhoneFontSizeNormal}"/>
								<TextBlock Margin="12,0,0,0"  Text="{Binding Title}" 
									Foreground="{StaticResource PhoneSubtleBrush}"  FontWeight="ExtraBold" 
									FontSize="{StaticResource PhoneFontSizeNormal}" TextAlignment="Left"  />
							</StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock Margin="12,0,0,0"  Visibility="{Binding Vis}" 
									Text="{Binding LocalizedResources.Requerester, Source={StaticResource LocalizedStrings}}" 
									Foreground="{StaticResource PhoneContrastBackgroundBrush}"  
									FontSize="{StaticResource PhoneFontSizeNormal}"  />
								<TextBlock Margin="12,0,0,0"  Text="{Binding Owner}" 
									Foreground="{StaticResource PhoneSubtleBrush}" FontWeight="ExtraBold" 
									FontSize="{StaticResource PhoneFontSizeNormal}"  />
							</StackPanel>
							<StackPanel Orientation="Horizontal" x:Name="Panel">
								<TextBlock Margin="12,0,0,0"   Text="{Binding LocalizedResources.Work, Source={StaticResource LocalizedStrings}}"  
									Foreground="{StaticResource PhoneContrastBackgroundBrush}" 
									FontSize="{StaticResource PhoneFontSizeNormal}" Visibility="{Binding Vis}"/>
								<TextBlock Margin="12,0,0,30" Text="{Binding CreatedOn}"
									Foreground="{StaticResource PhoneSubtleBrush}"  FontWeight="ExtraBold" 
									FontSize="{StaticResource PhoneFontSizeNormal}"/>
							</StackPanel>
						</StackPanel>
					</DataTemplate>
				</toolkit:LongListMultiSelector.ItemTemplate>
				<toolkit:LongListMultiSelector.ItemInfoTemplate>
                   
					<DataTemplate>
						<StackPanel >
							<TextBlock Foreground="Red" Margin="0,-9,5,0" Text="{Binding Price}" TextAlignment="Left"
								Style="{StaticResource PhoneTextExtraLargeStyle}" FontSize="36"  />
						</StackPanel>
					</DataTemplate>
				</toolkit:LongListMultiSelector.ItemInfoTemplate>
			</toolkit:LongListMultiSelector>
		</Grid>
	</Grid>

</phone:PhoneApplicationPage>
    